'use strict';

var _addLeadingComments = require('./addLeadingComments');

var _addLeadingComments2 = _interopRequireDefault(_addLeadingComments);

var _addMissingRequires = require('./addMissingRequires');

var _addMissingRequires2 = _interopRequireDefault(_addMissingRequires);

var _addMissingTypes = require('./addMissingTypes');

var _addMissingTypes2 = _interopRequireDefault(_addMissingTypes);

var _formatRequires = require('./formatRequires');

var _formatRequires2 = _interopRequireDefault(_formatRequires);

var _removeLeadingComments = require('./removeLeadingComments');

var _removeLeadingComments2 = _interopRequireDefault(_removeLeadingComments);

var _removeUnusedRequires = require('./removeUnusedRequires');

var _removeUnusedRequires2 = _interopRequireDefault(_removeUnusedRequires);

var _removeUnusedTypes = require('./removeUnusedTypes');

var _removeUnusedTypes2 = _interopRequireDefault(_removeUnusedTypes);

var _printRoot = require('../utils/printRoot');

var _printRoot2 = _interopRequireDefault(_printRoot);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This is the collection of transforms that affect requires.
 */
function transform(root, options) {
  var blacklist = options.blacklist || new Set();
  var comments = void 0;
  if (!blacklist.has('requires.transferComments')) {}
  // comments = removeLeadingComments(root);

  //console.log(printRoot(root));

  if (!blacklist.has('requires.removeUnusedRequires')) {
    (0, _removeUnusedRequires2.default)(root, options);
  }
  if (!blacklist.has('requires.addMissingRequires')) {
    (0, _addMissingRequires2.default)(root, options);
  }
  if (!blacklist.has('requires.removeUnusedTypes')) {
    (0, _removeUnusedTypes2.default)(root, options);
  }
  if (!blacklist.has('requires.addMissingTypes')) {
    (0, _addMissingTypes2.default)(root, options);
  }
  if (!blacklist.has('requires.formatRequires')) {
    (0, _formatRequires2.default)(root);
  }
  //console.log(printRoot(root));
  if (!blacklist.has('requires.transferComments')) {}
  // addLeadingComments(root, comments);

  //console.log(printRoot(root));
} /*
   * Copyright (c) 2015-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the license found in the LICENSE file in
   * the root directory of this source tree.
   *
   * 
   */

module.exports = transform;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vcmVxdWlyZXMvdHJhbnNmb3JtLmpzIl0sIm5hbWVzIjpbInRyYW5zZm9ybSIsInJvb3QiLCJvcHRpb25zIiwiYmxhY2tsaXN0IiwiU2V0IiwiY29tbWVudHMiLCJoYXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQWNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBOzs7QUFHQSxTQUFTQSxTQUFULENBQW1CQyxJQUFuQixFQUFxQ0MsT0FBckMsRUFBbUU7QUFDakUsTUFBTUMsWUFBK0JELFFBQVFDLFNBQVIsSUFBcUIsSUFBSUMsR0FBSixFQUExRDtBQUNBLE1BQUlDLGlCQUFKO0FBQ0EsTUFBSSxDQUFDRixVQUFVRyxHQUFWLENBQWMsMkJBQWQsQ0FBTCxFQUFpRCxDQUVoRDtBQURDOztBQUVGOztBQUVBLE1BQUksQ0FBQ0gsVUFBVUcsR0FBVixDQUFjLCtCQUFkLENBQUwsRUFBcUQ7QUFDbkQsd0NBQXFCTCxJQUFyQixFQUEyQkMsT0FBM0I7QUFDRDtBQUNELE1BQUksQ0FBQ0MsVUFBVUcsR0FBVixDQUFjLDZCQUFkLENBQUwsRUFBbUQ7QUFDakQsc0NBQW1CTCxJQUFuQixFQUF5QkMsT0FBekI7QUFDRDtBQUNELE1BQUksQ0FBQ0MsVUFBVUcsR0FBVixDQUFjLDRCQUFkLENBQUwsRUFBa0Q7QUFDaEQscUNBQWtCTCxJQUFsQixFQUF3QkMsT0FBeEI7QUFDRDtBQUNELE1BQUksQ0FBQ0MsVUFBVUcsR0FBVixDQUFjLDBCQUFkLENBQUwsRUFBZ0Q7QUFDOUMsbUNBQWdCTCxJQUFoQixFQUFzQkMsT0FBdEI7QUFDRDtBQUNELE1BQUksQ0FBQ0MsVUFBVUcsR0FBVixDQUFjLHlCQUFkLENBQUwsRUFBK0M7QUFDN0Msa0NBQWVMLElBQWY7QUFDRDtBQUNEO0FBQ0EsTUFBSSxDQUFDRSxVQUFVRyxHQUFWLENBQWMsMkJBQWQsQ0FBTCxFQUFpRCxDQUVoRDtBQURDOztBQUVGO0FBQ0QsQyxDQXRERDs7Ozs7Ozs7OztBQXdEQUMsT0FBT0MsT0FBUCxHQUFpQlIsU0FBakIiLCJmaWxlIjoidHJhbnNmb3JtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgaW5cbiAqIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKi9cblxuaW1wb3J0IHR5cGUge0NvbGxlY3Rpb259IGZyb20gJy4uL3R5cGVzL2FzdCc7XG5pbXBvcnQgdHlwZSB7U291cmNlT3B0aW9uc30gZnJvbSAnLi4vb3B0aW9ucy9Tb3VyY2VPcHRpb25zJztcbmltcG9ydCB0eXBlIHtUcmFuc2Zvcm1LZXl9IGZyb20gJy4uL3R5cGVzL3RyYW5zZm9ybXMnO1xuXG5pbXBvcnQgYWRkTGVhZGluZ0NvbW1lbnRzIGZyb20gJy4vYWRkTGVhZGluZ0NvbW1lbnRzJztcbmltcG9ydCBhZGRNaXNzaW5nUmVxdWlyZXMgZnJvbSAnLi9hZGRNaXNzaW5nUmVxdWlyZXMnO1xuaW1wb3J0IGFkZE1pc3NpbmdUeXBlcyBmcm9tICcuL2FkZE1pc3NpbmdUeXBlcyc7XG5pbXBvcnQgZm9ybWF0UmVxdWlyZXMgZnJvbSAnLi9mb3JtYXRSZXF1aXJlcyc7XG5pbXBvcnQgcmVtb3ZlTGVhZGluZ0NvbW1lbnRzIGZyb20gJy4vcmVtb3ZlTGVhZGluZ0NvbW1lbnRzJztcbmltcG9ydCByZW1vdmVVbnVzZWRSZXF1aXJlcyBmcm9tICcuL3JlbW92ZVVudXNlZFJlcXVpcmVzJztcbmltcG9ydCByZW1vdmVVbnVzZWRUeXBlcyBmcm9tICcuL3JlbW92ZVVudXNlZFR5cGVzJztcbmltcG9ydCBwcmludFJvb3QgZnJvbSAnLi4vdXRpbHMvcHJpbnRSb290JztcblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBjb2xsZWN0aW9uIG9mIHRyYW5zZm9ybXMgdGhhdCBhZmZlY3QgcmVxdWlyZXMuXG4gKi9cbmZ1bmN0aW9uIHRyYW5zZm9ybShyb290OiBDb2xsZWN0aW9uLCBvcHRpb25zOiBTb3VyY2VPcHRpb25zKTogdm9pZCB7XG4gIGNvbnN0IGJsYWNrbGlzdDogU2V0PFRyYW5zZm9ybUtleT4gPSBvcHRpb25zLmJsYWNrbGlzdCB8fCBuZXcgU2V0KCk7XG4gIGxldCBjb21tZW50cztcbiAgaWYgKCFibGFja2xpc3QuaGFzKCdyZXF1aXJlcy50cmFuc2ZlckNvbW1lbnRzJykpIHtcbiAgICAvLyBjb21tZW50cyA9IHJlbW92ZUxlYWRpbmdDb21tZW50cyhyb290KTtcbiAgfVxuICAvL2NvbnNvbGUubG9nKHByaW50Um9vdChyb290KSk7XG5cbiAgaWYgKCFibGFja2xpc3QuaGFzKCdyZXF1aXJlcy5yZW1vdmVVbnVzZWRSZXF1aXJlcycpKSB7XG4gICAgcmVtb3ZlVW51c2VkUmVxdWlyZXMocm9vdCwgb3B0aW9ucyk7XG4gIH1cbiAgaWYgKCFibGFja2xpc3QuaGFzKCdyZXF1aXJlcy5hZGRNaXNzaW5nUmVxdWlyZXMnKSkge1xuICAgIGFkZE1pc3NpbmdSZXF1aXJlcyhyb290LCBvcHRpb25zKTtcbiAgfVxuICBpZiAoIWJsYWNrbGlzdC5oYXMoJ3JlcXVpcmVzLnJlbW92ZVVudXNlZFR5cGVzJykpIHtcbiAgICByZW1vdmVVbnVzZWRUeXBlcyhyb290LCBvcHRpb25zKTtcbiAgfVxuICBpZiAoIWJsYWNrbGlzdC5oYXMoJ3JlcXVpcmVzLmFkZE1pc3NpbmdUeXBlcycpKSB7XG4gICAgYWRkTWlzc2luZ1R5cGVzKHJvb3QsIG9wdGlvbnMpO1xuICB9XG4gIGlmICghYmxhY2tsaXN0LmhhcygncmVxdWlyZXMuZm9ybWF0UmVxdWlyZXMnKSkge1xuICAgIGZvcm1hdFJlcXVpcmVzKHJvb3QpO1xuICB9XG4gIC8vY29uc29sZS5sb2cocHJpbnRSb290KHJvb3QpKTtcbiAgaWYgKCFibGFja2xpc3QuaGFzKCdyZXF1aXJlcy50cmFuc2ZlckNvbW1lbnRzJykpIHtcbiAgICAvLyBhZGRMZWFkaW5nQ29tbWVudHMocm9vdCwgY29tbWVudHMpO1xuICB9XG4gIC8vY29uc29sZS5sb2cocHJpbnRSb290KHJvb3QpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0cmFuc2Zvcm07XG4iXX0=